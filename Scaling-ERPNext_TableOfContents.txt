
Table of contents
Background    

1. ERPNext Architecture    

   1.1 Frappe Framework    

   1.2 Services    

   1.3 Frappe Bench    

2. Scaling Resources    

   2.2 Hardware Scaling    

   2.3 Database Scaling    

       2.3.1 Configuration    

       2.3.2 Index Optimization    

       2.3.3 MariaDB / MySQL Scaling    

       2.3.4 Data Partitioning    

   2.4 Scaling the Application Server (Frappe)    

       2.4.1 NGINX Proxy    

       2.4.2 Separation of Web and Job Workers    

       2.4.3 Separation of Read and Write Queries    

       2.4.4 Async Python using GEvent    

2.5 Scaling Redis    

2.6 Scaling Front-end    

3. Application Scaling    

   3.1 Performance Monitoring Tools    

   3.2 Scaling Reports / MIS    

   3.3 Increasing Throughput    

   3.4 Refactoring    

   3.5 Partitioning Ledgers / Federation    

   3.6 Customization and Plugins    

   3.7 Custom Front End    

   3.8 Load Balancing    

   3.9 Migrations at Scale    

4. Testimonial    

Conclusion  